{"version":3,"file":"522.index.js","mappings":"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","sources":["webpack://snyk/./src/cli/commands/protect/index.ts"],"sourcesContent":["import * as debugModule from 'debug';\nimport * as snyk from '../../../lib/';\nimport * as types from '../../../lib/types';\nconst protect = require('../../../lib/protect');\nimport * as analytics from '../../../lib/analytics';\nimport * as detect from '../../../lib/detect';\nimport * as pm from '../../../lib/package-managers';\nimport { CustomError } from '../../../lib/errors';\nimport { LegacyVulnApiResult } from '../../../lib/snyk-test/legacy';\nimport * as errors from '../../../lib/errors';\n\nconst debug = debugModule('snyk');\n\nexport default async function protectFunc(\n  options: types.PolicyOptions &\n    types.Options &\n    types.TestOptions &\n    types.ProtectOptions,\n) {\n  const protectOptions = { ...options };\n  protectOptions.loose = true; // replace missing policies with empty ones\n  protectOptions.vulnEndpoint = '/vuln/npm/patches';\n  // TODO: fix this by providing better patch support for yarn\n  // yarn hoists packages up a tree so we can't assume their location\n  // on disk without traversing node_modules\n  // currently the npm@2 nd npm@3 plugin resolve-deps can do this\n  // but not the latest node-lockfile-parser\n  // HACK: if yarn set traverseNodeModules option to\n  // bypass lockfile test for wizard\n  protectOptions.traverseNodeModules = true;\n\n  try {\n    const packageManager: pm.SupportedPackageManagers = detect.detectPackageManager(\n      process.cwd(),\n      protectOptions,\n    );\n    const supportsProtect = pm.PROTECT_SUPPORTED_PACKAGE_MANAGERS.includes(\n      packageManager,\n    );\n    if (!supportsProtect) {\n      throw new Error(\n        'Snyk protect for ' +\n          pm.SUPPORTED_PACKAGE_MANAGER_NAME[packageManager] +\n          ' projects is not currently supported',\n      );\n    }\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  if (protectOptions.interactive) {\n    // silently fail\n    return Promise.reject(\n      new Error(\n        'Snyk protect interactive mode ' +\n          'has moved. Please run `snyk wizard`',\n      ),\n    );\n  }\n\n  if (protectOptions['dry-run']) {\n    debug('*** dry run ****');\n  } else {\n    debug('~~~~ LIVE RUN ~~~~');\n  }\n\n  try {\n    const policy = await snyk.policy.load(protectOptions['policy-path']);\n    if (policy.patch) {\n      return patch(protectOptions);\n    }\n    return 'Nothing to do';\n  } catch (e) {\n    let error;\n    if (e.code === 'ENOENT') {\n      error = new errors.PolicyNotFoundError();\n    } else {\n      error = new errors.FailedToLoadPolicyError();\n      error.innerError = e;\n    }\n    throw error;\n  }\n}\n\nasync function patch(options: types.PolicyOptions & types.Options) {\n  try {\n    const response = (await snyk.test(\n      process.cwd(),\n      options,\n    )) as LegacyVulnApiResult;\n    // TODO: need to add support for multiple test results being returned\n    // from test (for example gradle modules)\n\n    if (!response.vulnerabilities) {\n      const e = new CustomError('Code is already patched');\n      e.strCode = 'ALREADY_PATCHED';\n      e.code = 204;\n      throw e;\n    }\n    await protect.patch(response.vulnerabilities, !options['dry-run']);\n    analytics.add('success', true);\n    return 'Successfully applied Snyk patches';\n  } catch (e) {\n    if (e.strCode === 'ALREADY_PATCHED') {\n      analytics.add('success', true);\n      return e.message + ', nothing to do';\n    }\n\n    analytics.add('success', false);\n\n    throw e;\n  }\n}\n"],"names":[],"sourceRoot":""}