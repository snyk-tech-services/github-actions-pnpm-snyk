{"version":3,"file":"542.index.js","mappings":"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","sources":["webpack://snyk/./src/cli/commands/auth/is-authed.ts","webpack://snyk/./src/cli/commands/ignore.ts","webpack://snyk/./src/lib/authorization.ts","webpack://snyk/./src/lib/errors/misconfigured-auth-in-ci-error.ts"],"sourcesContent":["import * as snyk from '../../../lib';\nimport config from '../../../lib/config';\nimport { makeRequest } from '../../../lib/request';\n\nexport function isAuthed() {\n  const token = snyk.config.get('api');\n  return verifyAPI(token).then((res: any) => {\n    return res.body.ok;\n  });\n}\n\nexport function verifyAPI(api) {\n  const payload = {\n    body: {\n      api,\n    },\n    method: 'POST',\n    url: config.API + '/verify/token',\n    json: true,\n  };\n\n  return new Promise((resolve, reject) => {\n    makeRequest(payload, (error, res, body) => {\n      if (error) {\n        return reject(error);\n      }\n\n      resolve({\n        res,\n        body,\n      });\n    });\n  });\n}\n","import * as policy from 'snyk-policy';\nimport chalk from 'chalk';\nimport * as authorization from '../../lib/authorization';\nimport * as auth from './auth/is-authed';\nimport { apiTokenExists } from '../../lib/api-token';\nimport { isCI } from '../../lib/is-ci';\nimport { MethodResult } from './types';\n\nimport * as Debug from 'debug';\nconst debug = Debug('snyk');\n\nimport { MisconfiguredAuthInCI } from '../../lib/errors/misconfigured-auth-in-ci-error';\n\nexport default function ignore(options): Promise<MethodResult> {\n  debug('snyk ignore called with options: %O', options);\n\n  return auth\n    .isAuthed()\n    .then((authed) => {\n      if (!authed) {\n        if (isCI()) {\n          throw MisconfiguredAuthInCI();\n        }\n      }\n      apiTokenExists();\n    })\n    .then(() => {\n      return authorization.actionAllowed('cliIgnore', options);\n    })\n    .then((cliIgnoreAuthorization) => {\n      if (!cliIgnoreAuthorization.allowed) {\n        debug('snyk ignore called when disallowed');\n        console.log(chalk.bold.red(cliIgnoreAuthorization.reason));\n        return;\n      }\n\n      if (!options.id) {\n        throw Error('idRequired');\n      }\n      options.expiry = new Date(options.expiry);\n      if (options.expiry.getTime() !== options.expiry.getTime()) {\n        debug('No/invalid expiry given, using the default 30 days');\n        options.expiry = new Date(Date.now() + 30 * 24 * 60 * 60 * 1000);\n      }\n      if (!options.reason) {\n        options.reason = 'None Given';\n      }\n\n      debug(\n        'changing policy: ignore \"%s\", for all paths, reason: \"%s\", until: %o',\n        options.id,\n        options.reason,\n        options.expiry,\n      );\n      return policy\n        .load(options['policy-path'])\n        .catch((error) => {\n          if (error.code === 'ENOENT') {\n            // file does not exist - create it\n            return policy.create();\n          }\n          throw Error('policyFile');\n        })\n        .then(async function ignoreIssue(pol) {\n          pol.ignore[options.id] = [\n            {\n              '*': {\n                reason: options.reason,\n                expires: options.expiry,\n                created: new Date(),\n              },\n            },\n          ];\n          return await policy.save(pol, options['policy-path']);\n        });\n    });\n}\n","import * as snyk from './';\nimport { makeRequest } from './request';\nimport config from './config';\n\nexport async function actionAllowed(\n  action: string,\n  options: { org?: string },\n): Promise<{ allowed: boolean; reason: string }> {\n  const org = options.org || config.org || null;\n\n  try {\n    const res = await makeRequest({\n      method: 'GET',\n      url: config.API + '/authorization/' + action,\n      json: true,\n      headers: {\n        authorization: 'token ' + snyk.api,\n      },\n      qs: org && { org },\n    });\n\n    return (res as any).body.result;\n  } catch (err) {\n    return {\n      allowed: false,\n      reason: 'There was an error while checking authorization',\n    };\n  }\n}\n","import { CustomError } from './custom-error';\n\nexport function MisconfiguredAuthInCI() {\n  const errorMsg =\n    'Snyk is missing auth token in order to run inside CI. You must include ' +\n    'your API token as an environment value: `SNYK_TOKEN=12345678`';\n\n  const error = new CustomError(errorMsg);\n  error.code = 401;\n  error.strCode = 'noAuthInCI';\n  error.userMessage = errorMsg;\n  return error;\n}\n"],"names":[],"sourceRoot":""}