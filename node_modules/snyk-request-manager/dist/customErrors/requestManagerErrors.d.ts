import { ApiError, ApiAuthenticationError, NotFoundError, GenericError } from './apiError';
declare const requestsManagerErrorOverload: (err: Error, channel: string, requestId: string) => Error;
declare class RequestsManagerApiError extends ApiError {
    channel: string;
    requestId: string;
    constructor(message: any, channel: string, requestId: string);
}
declare class RequestsManagerApiAuthenticationError extends ApiAuthenticationError {
    channel: string;
    requestId: string;
    constructor(message: any, channel: string, requestId: string);
}
declare class RequestsManagerNotFoundError extends NotFoundError {
    channel: string;
    requestId: string;
    constructor(message: any, channel: string, requestId: string);
}
declare class RequestsManagerGenericError extends GenericError {
    channel: string;
    requestId: string;
    constructor(message: any, channel: string, requestId: string);
}
export { RequestsManagerApiError, RequestsManagerApiAuthenticationError, RequestsManagerNotFoundError, RequestsManagerGenericError, requestsManagerErrorOverload };
