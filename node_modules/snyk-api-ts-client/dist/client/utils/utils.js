"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTotalPaginationCount = exports.getProjectUUID = void 0;
const org_1 = require("../generated/org");
exports.getProjectUUID = async (orgID, nonUUIDProjectID, projectType = 'cli') => {
    const body = { filters: {} };
    const allProjects = await new org_1.Org({ orgId: orgID }).projects.post(body);
    const allProjectsArray = allProjects.projects;
    const selectedProjectArray = allProjectsArray.filter((project) => project.name == nonUUIDProjectID && project.origin == projectType);
    if (selectedProjectArray.length == 0) {
        throw new Error('Snyk API - Could not find a monitored project matching.');
    }
    else if (selectedProjectArray.length > 1) {
        throw new Error('Snyk API - Could not find a monitored project matching accurately.');
    }
    return selectedProjectArray[0].id;
};
exports.getTotalPaginationCount = (linkHeaderLine) => {
    const regExp = /(\?|&)page=([0-9]+)/;
    let count = 1;
    let linkLastPage = linkHeaderLine
        .replace('link: ', '')
        .split(',')
        .filter((link) => link.indexOf('rel=last') > 0);
    if (linkLastPage &&
        linkLastPage.length == 1 &&
        linkLastPage[0].match(regExp)) {
        const lastPageMatch = linkLastPage[0].match(regExp);
        count = lastPageMatch ? parseInt(lastPageMatch[2]) : 1;
    }
    else {
        throw new Error(`Error unable to parse extract total page count from links in request header ${linkHeaderLine}`);
    }
    return count;
};
//# sourceMappingURL=utils.js.map